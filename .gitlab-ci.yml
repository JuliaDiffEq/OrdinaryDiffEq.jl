stages:
  - build
  - test
  - post

variables:
  JULIA_DEPOT_PATH: "$CI_PROJECT_DIR/.julia/"
  JULIA_NUM_THREADS: '8'

.root:
  image: "juliagpu/julia:v1.2-cuda"
  before_script:
    - julia -e "using InteractiveUtils;
                versioninfo()"
  only:
    - master
    - tags
    - external
    - pushes

build:
  extends: .root
  stage: build
  script:
    - mkdir $JULIA_DEPOT_PATH # Pkg.jl#325
    - julia --project -e "using Pkg; Pkg.build(); using OrdinaryDiffEq;"
  artifacts:
    when: always
    paths:
      - Manifest.toml
      - .julia/
      - deps/ext.jl
      - deps/build.log

.test:
  extends: .root
  stage: test
  dependencies:
    - build
  artifacts:
    when: always
    paths:
      - Manifest.toml
      - .julia/
      - deps/ext.jl
      - deps/build.log
      - src/*.cov
      - src/*/*.cov
      - src/*/*/*.cov

test-multithreading:
  extends: .test
  variables:
    GROUP: "Multithreading"
  script:
    - julia --project -e "using Pkg;
                          Pkg.test(; coverage = true);"

test-GPU:
  extends: .test
  variables:
    GROUP: "GPU"
  script:
    - julia --project -e "using Pkg; Pkg.add(\"CuArrays\");
                          Pkg.test(; coverage = true);"

coverage:
  extends: .root
  stage: post
  dependencies:
    - test-multithreading
    - test-GPU
  script:
    - julia -e 'using Pkg;
                Pkg.add("Coverage")'
    - julia -e 'using Coverage;
                cl, tl = get_summary(process_folder());
                println("(", cl/tl*100, "%) covered");
                Codecov.submit_local(process_folder(), ".")'
  coverage: '/\(\d+.\d+\%\) covered/'